using Ionic.Zip;
using Malware_FYPJ.Entity;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data.SqlClient;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Web;
using System.Web.Services;
using System.Web.Security;

namespace Malware_FYPJ
{
    /// <summary>
    /// Summary description for Submit
    /// </summary>
    [WebService(Namespace = "http://tempuri.org/")]
    [WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]
    [System.ComponentModel.ToolboxItem(false)]
    // To allow this Web Service to be called from script, using ASP.NET AJAX, uncomment the following line. 
    // [System.Web.Script.Services.ScriptService]
    public class Submit : System.Web.Services.WebService
    {

        [WebMethod]
        public string SubmitSample(string file_name, byte[] file_content, Guid userId, string file_type)
        {
            Sample s = new Sample();
            s.SampleName = file_name;
            s.Filetype = file_type;
            s.SampleInsertDate = DateTime.Now;
            s.UserId = userId;

            // Generate GUID
            s.SampleId = Sample.generateGuid();

            // Get hashes of byte array
            s.Md5 = Sample.generateMD5(file_content);
            s.Sha1 = Sample.generateSHA1(file_content);
            s.Sha512 = Sample.generateSHA512(file_content);
            /*tey say don't want already :(
            SHA256CryptoServiceProvider cryptoSHA256 = new SHA256CryptoServiceProvider();
            byte[] bsSHA256 = cryptoSHA256.ComputeHash(file_content);
            String sha256 = System.Text.Encoding.UTF8.GetString(bsSHA256);

            SHA512CryptoServiceProvider cryptoSHA512 = new SHA512CryptoServiceProvider();
            byte[] bsSHA512 = cryptoSHA512.ComputeHash(file_content);
            String sha512 = System.Text.Encoding.UTF8.GetString(bsSHA512);

            CRC32 cryptoCRC32 = new CRC32();
            byte[] bsCRC3 = cryptoCRC32.ComputeHash(file_content);
            String crc32 = System.Text.Encoding.UTF8.GetString(bsCRC3);
            */

            // Check if file exist in DB
            if (Sample.checkHashExistence(s.Md5, s.Sha1))
            {
                return "Error: Hash already exist (MD5: " + s.Md5 + ")";
            }

            // Save record to DB
            Sample.insertSample(s);

            // Convert byte array back to file
            string file_path = Sample.convertBytesToFile(s.Md5, s.SampleName, file_content);

            // Send fle to StorageVm
            Sample.saveFileToStorageVM(file_path);

            // Send file to EngineVM
            Sample.saveFileToEngineVM(file_path);
            // TODO

            // Delete temp file
            // File.Delete(file_path);

            return "Sucessfully submitted for analysis";
        }

        [WebMethod]
        public string Getuserinfo(string user, string comname, string ip, string country, string city, string time, string app, string upload, string download)
        {
            GetInfo get = new GetInfo();
            get.Username = user;
            get.Comname = comname;
            get.City = city;
            get.Country = country;
            get.IP = ip;
            get.Time = time;
            get.App = app;
            get.Download = download;
            get.Upload = upload;

            GetInfo.insertlog(get);

            return "Logged";
        }

        [WebMethod]
        public List<string> GetSampleList()
        {
            string query = "SELECT [SampleName] FROM [sample]";
            SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["malwrConnectionString"].ToString());
            SqlCommand cmd = new SqlCommand(query, con);
            con.Open();
            SqlDataReader reader = cmd.ExecuteReader();
            List<string> readArrayList = new List<string>();
            while (reader.Read())
            {
                readArrayList.Add(reader["SampleName"].ToString());

            }

            return readArrayList;
        }

        [WebMethod]
        public List<string> GetMD5List()
        {
            string query = "SELECT [MD5] FROM [sample]";
            SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["malwrConnectionString"].ToString());
            SqlCommand cmd = new SqlCommand(query, con);
            con.Open();
            SqlDataReader reader = cmd.ExecuteReader();
            List<string> readArrayList = new List<string>();
            while (reader.Read())
            {
                readArrayList.Add(reader["MD5"].ToString());

            }

            return readArrayList;
        }

        [WebMethod]
        public bool AuthenticateUser(string username, string password)
        {
            if(Membership.ValidateUser(username, password))
            {
                return true;
            }
            else
            { return false; }
        }

        [WebMethod]
        public Guid GetUserGUID(string username)
        {
            MembershipUser User = Membership.GetUser(username);
            object UserGUID = User.ProviderUserKey;
            Guid uploadID = new Guid(Convert.ToString(UserGUID));

            return uploadID;
        }

        [WebMethod]
        public List<string> Getfiletype()
        {
            string query = "SELECT [Filetype] FROM [sample]";
            SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["malwrConnectionString"].ToString());
            SqlCommand cmd = new SqlCommand(query, con);
            con.Open();
            SqlDataReader reader = cmd.ExecuteReader();
            List<string> readArrayList = new List<string>();
            while (reader.Read())
            {
                readArrayList.Add(reader["Filetype"].ToString());

            }

            return readArrayList;
        }

        [WebMethod()]
        public byte[] DownloadAllReport(string FName)
        {
            System.IO.FileStream fs1 = null;
            using (ZipFile zip = new ZipFile())
            {
                string[] files = Directory.GetFiles("C:\\Repository\\Report\\Raw_Cuckoo\\" +FName+"\\reports");
                // add all those files to the ProjectX folder in the zip file
                zip.Password = "infected";
                zip.Encryption = EncryptionAlgorithm.WinZipAes256;
                zip.AddFiles(files, "Reports");
                zip.Comment = "This zip was created at " + System.DateTime.Now.ToString("G");
                zip.Save("C:\\Repository\\Report\\Raw_Cuckoo\\" +FName+"\\reports\\SampleReports.zip");
            }
            fs1 = System.IO.File.Open("C:\\Repository\\Report\\Raw_Cuckoo\\" + FName + "\\reports\\SampleReports.zip", FileMode.Open, FileAccess.Read);
            byte[] b1 = new byte[fs1.Length];
            fs1.Read(b1, 0, (int)fs1.Length);
            fs1.Close();
            File.Delete("C:\\Repository\\Report\\Raw_Cuckoo\\" + FName + "\\reports\\SampleReports.zip");
            return b1;            
        }

        [WebMethod()]
        public byte[] DownloadSample(string FName, string filetype)
        {

            System.IO.FileStream fs2 = null;
            using (ZipFile zip = new ZipFile())
            {
                // add file to the Project folder in the zip file
                zip.Password = "infected";
                zip.Encryption = EncryptionAlgorithm.WinZipAes256;
                zip.Comment = "This zip was created at " + System.DateTime.Now.ToString("G");
                zip.AddFile("C:\\Repository\\Samples\\"+ FName + filetype);
                zip.Save("C:\\Repository\\Samples\\" + FName + ".zip");
            }
            fs2 = System.IO.File.Open("C:\\Repository\\Samples\\" + FName + ".zip", FileMode.Open, FileAccess.Read);
            byte[] b2 = new byte[fs2.Length];
            fs2.Read(b2, 0, (int)fs2.Length);
            fs2.Close();
            File.Delete("C:\\Repository\\Samples\\" + FName + ".zip");
            return b2;


        }

        [WebMethod()]
        public byte[] DownloadReport(string FName, string formatype)
        {
            System.IO.FileStream fs1 = null;
            using (ZipFile zip = new ZipFile())
            {
                // add all those files to the ProjectX folder in the zip file
                zip.Password = "infected";
                zip.Encryption = EncryptionAlgorithm.WinZipAes256;
                zip.AddFile("C:\\Repository\\Report\\Raw_Cuckoo\\" + FName + "\\reports\\report." + formatype);
                zip.Comment = "This zip was created at " + System.DateTime.Now.ToString("G");
                zip.Save("C:\\Repository\\Report\\Raw_Cuckoo\\" + FName + "\\reports\\" + FName + ".zip");
            }
            fs1 = System.IO.File.Open("C:\\Repository\\Report\\Raw_Cuckoo\\" + FName + "\\reports\\" + FName + ".zip", FileMode.Open, FileAccess.Read);
            byte[] b1 = new byte[fs1.Length];
            fs1.Read(b1, 0, (int)fs1.Length);
            fs1.Close();
            File.Delete("C:\\Repository\\Report\\Raw_Cuckoo\\" + FName + "\\reports\\" + FName + ".zip");
            return b1;


        }
       
    }
}