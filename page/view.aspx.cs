using Malware_FYPJ.Entity;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Net;
using System.Text;
using System.Data;
using System.Data.SqlClient;
using System.Configuration;
using Ionic.Zip;

namespace Malware_FYPJ.page
{
    public partial class view : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {

            DataSet ds = new DataSet();
            SqlConnection sConnection = new SqlConnection("Data Source=WIN-1K9HLEFOQCT;Initial Catalog=malwr;Integrated Security=True;");
            try
            {
                sConnection.Open();
                string query = "SELECT * FROM Sample s INNER JOIN aspnet_Users u ON s.UserId = u.UserId";
                SqlCommand sCommand = new SqlCommand(query, sConnection);

                SqlDataAdapter sAdapter = new SqlDataAdapter(sCommand);

                sAdapter.Fill(ds);
                GridView1.DataSource = ds;
                GridView1.DataBind();
            }
            catch (Exception ex) { }

            GridView1.PageSize = 10;
            GridView1.PageIndexChanging += new GridViewPageEventHandler(GridView1_PageIndexChanging);
        }
        protected void GridView1_PageIndexChanging(object sender, GridViewPageEventArgs e)
        {
            GridView1.PageIndex = e.NewPageIndex;
            GridView1.DataBind();
        }

        public void SearchGridView(string column)
        {
            DataTable sTable = new DataTable();
            DataSet ds = new DataSet();
            SqlConnection sConnection = new SqlConnection("Data Source=WIN-1K9HLEFOQCT;Initial Catalog=malwr;Integrated Security=True;");
            try
            {
                sConnection.Open();
                string query = "SELECT * FROM Sample s INNER JOIN aspnet_Users u ON s.UserId = u.UserId";
                if (ddl_search.SelectedValue.ToString() == "File Name")
                    query += " WHERE SampleName LIKE '%" + tb_search.Text + "%'";
                else if (ddl_search.SelectedValue.ToString() == "SHA1")
                    query += " WHERE SHA1 LIKE '%" + tb_search.Text + "%'";
                else if (ddl_search.SelectedValue.ToString() == "Submitted by")
                    query += " WHERE u.UserName LIKE '%" + tb_search.Text + "%'";
                else if (ddl_search.SelectedValue.ToString() == "MD5")
                    query += " WHERE MD5 LIKE '%" + tb_search.Text + "%'";


                SqlCommand sCommand = new SqlCommand(query, sConnection);

                SqlDataAdapter sAdapter = new SqlDataAdapter(sCommand);

                sAdapter.Fill(ds);
                GridView1.DataSource = ds;
                GridView1.DataBind();
            }

            catch (System.Data.SqlClient.SqlException se)
            {
                string msg = "Fail";
                msg += se.Message;
                throw new Exception(msg);
            }
            sConnection.Close();

        }
        protected void DownloadFile(object sender, EventArgs e)
        {
            try
            {
                Response.Clear();
                var closeLink = (Control)sender;
                GridViewRow row = (GridViewRow)closeLink.NamingContainer;
                string filetype = row.Cells[3].Text; 
                string fileName = (sender as LinkButton).CommandArgument;

                //string filePath = "ftp://172.20.180.19//samples/" + fileName + filetype;
                //string ftpUsername = "storagevm";
                //string ftpPassword = "password";

                //using (WebClient request = new WebClient())
                //{
                //    request.Credentials = new NetworkCredential(ftpUsername, ftpPassword);
                //    byte[] fileData = request.DownloadData(filePath);
                //    string pathUser = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile);
                //    string pathDownload = Server.MapPath("~/Upload/") + fileName;

                //    using (FileStream file = System.IO.File.Create(pathDownload))
                //    {
                //        file.Write(fileData, 0, fileData.Length);
                //        file.Close();
                //    }

                //    FileInfo file1 = new FileInfo(pathDownload);
                //    if (file1.Exists)
                //    {

                System.IO.FileStream fs2 = null;
                using (ZipFile zip = new ZipFile())
                {
                    // add file to the Project folder in the zip file
                    zip.Password = "infected";
                    zip.Encryption = EncryptionAlgorithm.WinZipAes256;
                    zip.Comment = "This zip was created at " + System.DateTime.Now.ToString("G");
                    zip.AddFile("C:\\Repository\\Samples\\" + fileName + filetype);
                    zip.Save("C:\\inetpub\\wwwroot\\Malware_FYPJ\\Upload\\" + fileName + ".zip");
                }

              
                        string country, ip, city;
                        country = "";
                        ip = "";
                        city = "";

                        using (StringReader reader = new StringReader(Getuserinfo()))
                        {
                            string line;
                            while ((line = reader.ReadLine()) != null)
                            {
                                if (line.Contains("Country"))
                                {
                                    country = line;
                                }
                                if (line.Contains("City"))
                                {
                                    city = line;
                                }
                                if (line.Contains("IP"))
                                {
                                    ip = line;
                                }

                            }
                        }

                        GetInfo get = new GetInfo();
                        get.Username = System.Web.HttpContext.Current.User.Identity.Name;
                        get.Comname = System.Net.Dns.GetHostName();
                        get.City = city;
                        get.Country = country;
                        get.IP = ip;
                        get.Time = DateTime.Now.ToString();
                        get.App = "Web";
                        get.Upload = "";
                        get.Download = fileName + filetype;

                        GetInfo.insertlog(get);

                        string query = "Update Sample SET Download = Download+1 WHERE MD5=@filename";
                        SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["malwrConnectionString"].ToString());
                        SqlCommand cmd = new SqlCommand(query, con);
                        con.Open();

                        cmd.Parameters.AddWithValue("@filename", fileName);
                        cmd.ExecuteNonQuery();
                        con.Close();

                        Response.Clear();
                        Response.ClearContent();
                        Response.ClearHeaders();
                        Response.Buffer = true;
                        Response.AppendHeader("Content-Disposition", "attachment; filename=a7a75a56b4b960c8532c37d3c705f88f.zip");
                        Response.ContentType = "application/zip";
                        Response.TransmitFile(Server.MapPath("~/Upload/" + fileName + ".zip"));
                        Response.Flush();
                        Response.End();
                        fs2.Close();
                        System.IO.File.Delete("C:\\inetpub\\wwwroot\\Malware_FYPJ\\Upload\\" + fileName + ".zip");

                    }
            //    }


            //}
            //catch (WebException wex)
            //{
            //    String status = ((FtpWebResponse)wex.Response).StatusDescription;
            //}
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
        }

        protected void Button1_Click(object sender, EventArgs e)
        {
            string column = GridView1.HeaderRow.Cells[2].Text.ToString();

            SearchGridView(column);

            GridView1.DataBind();
        }

        static public string Getuserinfo()
        {
            Info req = new Info();
            req.Request("http://checkip.dyndns.org");
            string[] a = req.ResponseBody.Split(':');
            string a2 = a[1].Substring(1);
            string[] a3 = a2.Split('<');
            string a4 = a3[0];

            return new WebClient().DownloadString("http://api.hostip.info/get_html.php?ip=" + a4);
        }
    }
}